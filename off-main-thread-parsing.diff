diff --git a/parser/htmlparser/src/nsParser.cpp b/parser/htmlparser/src/nsParser.cpp
--- a/parser/htmlparser/src/nsParser.cpp
+++ b/parser/htmlparser/src/nsParser.cpp
@@ -822,17 +822,17 @@ nsParser::Initialize(PRBool aConstructor
   mInternalState = NS_OK;
   mStreamStatus = 0;
   mCommand = eViewNormal;
   mFlags = NS_PARSER_FLAG_OBSERVERS_ENABLED |
            NS_PARSER_FLAG_PARSER_ENABLED |
            NS_PARSER_FLAG_CAN_TOKENIZE;
   mScriptsExecuting = 0;
 
-  NS_GetCurrentThread(getter_AddRefs(mParserThread));
+  NS_NewThread(getter_AddRefs(mParserThread));
 
   MOZ_TIMER_DEBUGLOG(("Reset: Parse Time: nsParser::nsParser(), this=%p\n", this));
   MOZ_TIMER_RESET(mParseTime);
   MOZ_TIMER_RESET(mDTDTime);
   MOZ_TIMER_RESET(mTokenizeTime);
 }
 
 void
@@ -2346,16 +2346,19 @@ nsParser::ResumeParse(PRBool allowIterat
         // Only allow parsing to be interrupted in the subsequent call to
         // build model.
         SetCanInterrupt(aCanInterrupt);
         nsresult theTokenizerResult = (mFlags & NS_PARSER_FLAG_CAN_TOKENIZE)
                                       ? Tokenize(aIsFinalChunk)
                                       : NS_OK;
         result = BuildModel();
 
+        NS_ASSERTION(NS_IsMainThread() || result != NS_ERROR_HTMLPARSER_INTERRUPTED,
+                     "The DTD should be ignoring off-main-thread interruptions.");
+
         if (result == NS_ERROR_HTMLPARSER_INTERRUPTED && aIsFinalChunk) {
           PostContinueEvent();
         }
         SetCanInterrupt(PR_FALSE);
 
         theIterationIsOk = theTokenizerResult != kEOF &&
                            result != NS_ERROR_HTMLPARSER_INTERRUPTED;
 
