diff --git a/parser/html/java/Makefile b/parser/html/java/Makefile
new file mode 100644
--- /dev/null
+++ b/parser/html/java/Makefile
@@ -0,0 +1,56 @@
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is Makefile.
+#
+# The Initial Developer of the Original Code is
+#   Ben Newman <b{enjam,newma}n@mozilla.com>
+#
+# Portions created by the Initial Developer are Copyright (C) 2009
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either the GNU General Public License Version 2 or later (the "GPL"), or
+# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+libs:: clean \
+; cd javaparser && \
+    make libs && mv javaparser.jar ../ && \
+  cd ../translator && \
+    make libs && mv translator.jar ../ && \
+  cd ..
+
+sync:: clean \
+; cd javaparser ; make sync ; cd .. ; \
+  cd translator ; make sync ; cd .. ; \
+  cd htmlparser ; make sync ; cd ..
+
+translate:: \
+; java -jar translator.jar htmlparser/src .. ../nsHtml5AtomList.h
+
+clean:: \
+; cd javaparser ; make clean ; cd .. ; \
+  cd translator ; make clean ; cd .. ; \
+  rm -rf *.jar
diff --git a/parser/html/java/README.txt b/parser/html/java/README.txt
new file mode 100644
--- /dev/null
+++ b/parser/html/java/README.txt
@@ -0,0 +1,13 @@
+If this is your first time building the HTML5 parser, you need to execute the
+following commands (from this directory) to bootstrap the translation:
+
+  make sync      # fetch remote source files and licenses
+  make           # build javaparser.jar and translator.jar
+  make translate # perform the Java-to-C++ translation
+
+If you make changes to the translator or the javaparser, you can rebuild by
+retyping 'make' in this directory.  If you make changes to the HTML5 java
+implementation, you can retranslate the java sources by retyping 'make
+translate' in this directory.
+
+Ben Newman (8 July 2009)
diff --git a/parser/html/java/htmlparser/Makefile b/parser/html/java/htmlparser/Makefile
new file mode 100644
--- /dev/null
+++ b/parser/html/java/htmlparser/Makefile
@@ -0,0 +1,43 @@
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is Makefile.
+#
+# The Initial Developer of the Original Code is
+#   Ben Newman <b{enjam,newma}n@mozilla.com>
+#
+# Portions created by the Initial Developer are Copyright (C) 2009
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either the GNU General Public License Version 2 or later (the "GPL"), or
+# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+SVN_BASE=http://svn.versiondude.net/whattf/htmlparser/trunk
+
+sync:: \
+; rm -rf src && \
+  svn co $(SVN_BASE)/src/nu/validator/htmlparser/impl src && \
+  find src -name .svn | xargs rm -rf
diff --git a/parser/html/java/javaparser/Makefile b/parser/html/java/javaparser/Makefile
new file mode 100644
--- /dev/null
+++ b/parser/html/java/javaparser/Makefile
@@ -0,0 +1,58 @@
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is Makefile.
+#
+# The Initial Developer of the Original Code is
+#   Ben Newman <b{enjam,newma}n@mozilla.com>
+#
+# Portions created by the Initial Developer are Copyright (C) 2009
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either the GNU General Public License Version 2 or later (the "GPL"), or
+# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+SVN_BASE=http://javaparser.googlecode.com/svn/trunk/JavaParser
+
+libs:: \
+; mkdir -p bin && \
+  find src -name "*.java" | \
+    xargs javac -g -d bin && \
+  jar cf javaparser.jar -C bin .
+
+sync:: \
+; rm -rf src && \
+  svn co $(SVN_BASE)/src && \
+  find src -name .svn | xargs rm -rf ; \
+  \
+  for file in COPYING COPYING.LESSER readme.txt ; \
+  do \
+    rm -f $$file ; \
+    svn cat $(SVN_BASE)/$$file > $$file ; \
+  done
+
+clean:: \
+; rm -rf bin javaparser.jar
diff --git a/parser/html/java/translator/Makefile b/parser/html/java/translator/Makefile
new file mode 100644
--- /dev/null
+++ b/parser/html/java/translator/Makefile
@@ -0,0 +1,58 @@
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is Makefile.
+#
+# The Initial Developer of the Original Code is
+#   Ben Newman <b{enjam,newma}n@mozilla.com>
+#
+# Portions created by the Initial Developer are Copyright (C) 2009
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either the GNU General Public License Version 2 or later (the "GPL"), or
+# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+SVN_BASE=http://svn.versiondude.net/whattf/htmlparser/trunk
+
+libs:: \
+; mkdir -p bin && \
+  find src -name "*.java" | \
+    xargs javac -cp ../javaparser.jar -g -d bin && \
+  jar cfm translator.jar manifest.txt -C bin .
+
+sync:: \
+; rm -rf src && \
+  svn co $(SVN_BASE)/translator-src src && \
+  find src -name .svn | xargs rm -rf ; \
+  \
+  for file in LICENSE.txt README.txt ; \
+  do \
+    rm -f $$file ; \
+    svn cat $(SVN_BASE)/$$file > $$file ; \
+  done
+
+clean:: \
+; rm -rf bin translator.jar
diff --git a/parser/html/java/translator/manifest.txt b/parser/html/java/translator/manifest.txt
new file mode 100644
--- /dev/null
+++ b/parser/html/java/translator/manifest.txt
@@ -0,0 +1,2 @@
+Main-Class: nu.validator.htmlparser.cpptranslate.Main
+Class-Path: javaparser.jar
diff --git a/parser/html/javasrc b/parser/html/javasrc
new file mode 120000
--- /dev/null
+++ b/parser/html/javasrc
@@ -0,0 +1,1 @@
+java/htmlparser/src
\ No newline at end of file
diff --git a/parser/html/nsHtml5AttributeName.cpp b/parser/html/nsHtml5AttributeName.cpp
--- a/parser/html/nsHtml5AttributeName.cpp
+++ b/parser/html/nsHtml5AttributeName.cpp
@@ -52,67 +52,67 @@
 #include "nsHtml5Portability.h"
 
 #include "nsHtml5AttributeName.h"
 #include "nsHtml5ReleasableAttributeName.h"
 
 nsIAtom** 
 nsHtml5AttributeName::SVG_DIFFERENT(nsIAtom* name, nsIAtom* camel)
 {
-  nsIAtom** rv = new nsIAtom*[4];
-  rv[0] = name;
-  rv[1] = name;
-  rv[2] = camel;
-  return rv;
+  nsIAtom** arr = new nsIAtom*[4];
+  arr[0] = name;
+  arr[1] = name;
+  arr[2] = camel;
+  return arr;
 }
 
 nsIAtom** 
 nsHtml5AttributeName::MATH_DIFFERENT(nsIAtom* name, nsIAtom* camel)
 {
-  nsIAtom** rv = new nsIAtom*[4];
-  rv[0] = name;
-  rv[1] = camel;
-  rv[2] = name;
-  return rv;
+  nsIAtom** arr = new nsIAtom*[4];
+  arr[0] = name;
+  arr[1] = camel;
+  arr[2] = name;
+  return arr;
 }
 
 nsIAtom** 
 nsHtml5AttributeName::COLONIFIED_LOCAL(nsIAtom* name, nsIAtom* suffix)
 {
-  nsIAtom** rv = new nsIAtom*[4];
-  rv[0] = name;
-  rv[1] = suffix;
-  rv[2] = suffix;
-  return rv;
+  nsIAtom** arr = new nsIAtom*[4];
+  arr[0] = name;
+  arr[1] = suffix;
+  arr[2] = suffix;
+  return arr;
 }
 
 nsIAtom** 
 nsHtml5AttributeName::SAME_LOCAL(nsIAtom* name)
 {
-  nsIAtom** rv = new nsIAtom*[4];
-  rv[0] = name;
-  rv[1] = name;
-  rv[2] = name;
-  return rv;
+  nsIAtom** arr = new nsIAtom*[4];
+  arr[0] = name;
+  arr[1] = name;
+  arr[2] = name;
+  return arr;
 }
 
 nsHtml5AttributeName* 
 nsHtml5AttributeName::nameByBuffer(PRUnichar* buf, PRInt32 offset, PRInt32 length)
 {
   PRInt32 hash = nsHtml5AttributeName::bufToHash(buf, length);
   PRInt32 index = nsHtml5AttributeName::ATTRIBUTE_HASHES.binarySearch(hash);
   if (index < 0) {
     return nsHtml5AttributeName::createAttributeName(nsHtml5Portability::newLocalNameFromBuffer(buf, offset, length));
   } else {
-    nsHtml5AttributeName* rv = nsHtml5AttributeName::ATTRIBUTE_NAMES[index];
-    nsIAtom* name = rv->getLocal(NS_HTML5ATTRIBUTE_NAME_HTML);
+    nsHtml5AttributeName* attributeName = nsHtml5AttributeName::ATTRIBUTE_NAMES[index];
+    nsIAtom* name = attributeName->getLocal(NS_HTML5ATTRIBUTE_NAME_HTML);
     if (!nsHtml5Portability::localEqualsBuffer(name, buf, offset, length)) {
       return nsHtml5AttributeName::createAttributeName(nsHtml5Portability::newLocalNameFromBuffer(buf, offset, length));
     }
-    return rv;
+    return attributeName;
   }
 }
 
 PRInt32 
 nsHtml5AttributeName::bufToHash(PRUnichar* buf, PRInt32 len)
 {
   PRInt32 hash2 = 0;
   PRInt32 hash = len;
diff --git a/parser/html/nsHtml5ElementName.cpp b/parser/html/nsHtml5ElementName.cpp
--- a/parser/html/nsHtml5ElementName.cpp
+++ b/parser/html/nsHtml5ElementName.cpp
@@ -57,22 +57,22 @@
 nsHtml5ElementName* 
 nsHtml5ElementName::elementNameByBuffer(jArray<PRUnichar,PRInt32> buf, PRInt32 offset, PRInt32 length)
 {
   PRInt32 hash = nsHtml5ElementName::bufToHash(buf, length);
   PRInt32 index = nsHtml5ElementName::ELEMENT_HASHES.binarySearch(hash);
   if (index < 0) {
     return new nsHtml5ReleasableElementName(nsHtml5Portability::newLocalNameFromBuffer(buf, offset, length));
   } else {
-    nsHtml5ElementName* rv = nsHtml5ElementName::ELEMENT_NAMES[index];
-    nsIAtom* name = rv->name;
+    nsHtml5ElementName* elementName = nsHtml5ElementName::ELEMENT_NAMES[index];
+    nsIAtom* name = elementName->name;
     if (!nsHtml5Portability::localEqualsBuffer(name, buf, offset, length)) {
       return new nsHtml5ReleasableElementName(nsHtml5Portability::newLocalNameFromBuffer(buf, offset, length));
     }
-    return rv;
+    return elementName;
   }
 }
 
 PRInt32 
 nsHtml5ElementName::bufToHash(jArray<PRUnichar,PRInt32> buf, PRInt32 len)
 {
   PRInt32 hash = len;
   hash <<= 5;
diff --git a/parser/html/nsHtml5MetaScanner.cpp b/parser/html/nsHtml5MetaScanner.cpp
--- a/parser/html/nsHtml5MetaScanner.cpp
+++ b/parser/html/nsHtml5MetaScanner.cpp
@@ -686,21 +686,21 @@ nsHtml5MetaScanner::tryCharset()
     candidateEncoding = nsHtml5TreeBuilder::extractCharsetFromContent(attVal);
     nsHtml5Portability::releaseString(attVal);
   } else {
     candidateEncoding = attVal;
   }
   if (!candidateEncoding) {
     return PR_FALSE;
   }
-  PRBool rv = tryCharset(candidateEncoding);
+  PRBool success = tryCharset(candidateEncoding);
   nsHtml5Portability::releaseString(candidateEncoding);
   contentIndex = -1;
   charsetIndex = -1;
-  return rv;
+  return success;
 }
 
 void
 nsHtml5MetaScanner::initializeStatics()
 {
 }
 
 void
diff --git a/parser/html/nsHtml5Tokenizer.cpp b/parser/html/nsHtml5Tokenizer.cpp
--- a/parser/html/nsHtml5Tokenizer.cpp
+++ b/parser/html/nsHtml5Tokenizer.cpp
@@ -279,17 +279,17 @@ nsHtml5Tokenizer::appendLongStrBuf(PRUni
 
 void 
 nsHtml5Tokenizer::appendSecondHyphenToBogusComment()
 {
   appendLongStrBuf('-');
 }
 
 void 
-nsHtml5Tokenizer::adjustDoubleHyphenAndAppendToLongStrBuf(PRUnichar c)
+nsHtml5Tokenizer::adjustDoubleHyphenAndAppendToLongStrBufAndErr(PRUnichar c)
 {
 
   appendLongStrBuf(c);
 }
 
 void 
 nsHtml5Tokenizer::appendLongStrBuf(jArray<PRUnichar,PRInt32> buffer, PRInt32 offset, PRInt32 length)
 {
@@ -647,16 +647,17 @@ nsHtml5Tokenizer::stateLoop(PRInt32 stat
               }
               goto stateloop;
             }
             case '\0': {
               c = 0xfffd;
             }
             case '\"':
             case '\'':
+            case '<':
             case '=':
             default: {
               if (c >= 'A' && c <= 'Z') {
                 c += 0x20;
               }
               clearStrBufAndAppendCurrentC(c);
               state = NS_HTML5TOKENIZER_ATTRIBUTE_NAME;
               goto beforeattributenameloop_end;
@@ -708,16 +709,17 @@ nsHtml5Tokenizer::stateLoop(PRInt32 stat
               }
               goto stateloop;
             }
             case '\0': {
               c = 0xfffd;
             }
             case '\"':
             case '\'':
+            case '<':
             default: {
               if (c >= 'A' && c <= 'Z') {
                 c += 0x20;
               }
               appendStrBuf(c);
               continue;
             }
           }
@@ -766,16 +768,17 @@ nsHtml5Tokenizer::stateLoop(PRInt32 stat
               if (shouldSuspend) {
                 goto stateloop_end;
               }
               goto stateloop;
             }
             case '\0': {
               c = 0xfffd;
             }
+            case '<':
             case '=':
             default: {
               clearLongStrBufAndAppendCurrentC(c);
               state = NS_HTML5TOKENIZER_ATTRIBUTE_VALUE_UNQUOTED;
               goto stateloop;
             }
           }
         }
@@ -979,16 +982,17 @@ nsHtml5Tokenizer::stateLoop(PRInt32 stat
               }
               goto stateloop;
             }
             case '\0': {
               c = 0xfffd;
             }
             case '\"':
             case '\'':
+            case '<':
             default: {
               addAttributeWithoutValue();
               if (c >= 'A' && c <= 'Z') {
                 c += 0x20;
               }
               clearStrBufAndAppendCurrentC(c);
               state = NS_HTML5TOKENIZER_ATTRIBUTE_NAME;
               goto stateloop;
@@ -1251,34 +1255,126 @@ nsHtml5Tokenizer::stateLoop(PRInt32 stat
           c = checkChar(buf, pos);
           switch(c) {
             case '>': {
               emitComment(2, pos);
               state = NS_HTML5TOKENIZER_DATA;
               goto stateloop;
             }
             case '-': {
-              adjustDoubleHyphenAndAppendToLongStrBuf(c);
+              adjustDoubleHyphenAndAppendToLongStrBufAndErr(c);
               continue;
             }
+            case ' ':
+            case '\t':
+            case '\f': {
+              adjustDoubleHyphenAndAppendToLongStrBufAndErr(c);
+              state = NS_HTML5TOKENIZER_COMMENT_END_SPACE;
+              goto commentendloop_end;
+            }
             case '\r': {
               adjustDoubleHyphenAndAppendToLongStrBufCarriageReturn();
-              state = NS_HTML5TOKENIZER_COMMENT;
+              state = NS_HTML5TOKENIZER_COMMENT_END_SPACE;
               goto stateloop_end;
             }
             case '\n': {
               adjustDoubleHyphenAndAppendToLongStrBufLineFeed();
-              state = NS_HTML5TOKENIZER_COMMENT;
+              state = NS_HTML5TOKENIZER_COMMENT_END_SPACE;
+              goto commentendloop_end;
+            }
+            case '!': {
+
+              appendLongStrBuf(c);
+              state = NS_HTML5TOKENIZER_COMMENT_END_BANG;
               goto stateloop;
             }
             case '\0': {
               c = 0xfffd;
             }
             default: {
-              adjustDoubleHyphenAndAppendToLongStrBuf(c);
+              adjustDoubleHyphenAndAppendToLongStrBufAndErr(c);
+              state = NS_HTML5TOKENIZER_COMMENT;
+              goto stateloop;
+            }
+          }
+        }
+        commentendloop_end: ;
+      }
+      case NS_HTML5TOKENIZER_COMMENT_END_SPACE: {
+        for (; ; ) {
+          if (++pos == endPos) {
+            goto stateloop_end;
+          }
+          c = checkChar(buf, pos);
+          switch(c) {
+            case '>': {
+              emitComment(0, pos);
+              state = NS_HTML5TOKENIZER_DATA;
+              goto stateloop;
+            }
+            case '-': {
+              appendLongStrBuf(c);
+              state = NS_HTML5TOKENIZER_COMMENT_END_DASH;
+              goto stateloop;
+            }
+            case ' ':
+            case '\t':
+            case '\f': {
+              appendLongStrBuf(c);
+              continue;
+            }
+            case '\r': {
+              appendLongStrBufCarriageReturn();
+              goto stateloop_end;
+            }
+            case '\n': {
+              appendLongStrBufLineFeed();
+              continue;
+            }
+            case '\0': {
+              c = 0xfffd;
+            }
+            default: {
+              appendLongStrBuf(c);
+              state = NS_HTML5TOKENIZER_COMMENT;
+              goto stateloop;
+            }
+          }
+        }
+      }
+      case NS_HTML5TOKENIZER_COMMENT_END_BANG: {
+        for (; ; ) {
+          if (++pos == endPos) {
+            goto stateloop_end;
+          }
+          c = checkChar(buf, pos);
+          switch(c) {
+            case '>': {
+              emitComment(3, pos);
+              state = NS_HTML5TOKENIZER_DATA;
+              goto stateloop;
+            }
+            case '-': {
+              appendLongStrBuf(c);
+              state = NS_HTML5TOKENIZER_COMMENT_END_DASH;
+              goto stateloop;
+            }
+            case '\r': {
+              appendLongStrBufCarriageReturn();
+              goto stateloop_end;
+            }
+            case '\n': {
+              appendLongStrBufLineFeed();
+              continue;
+            }
+            case '\0': {
+              c = 0xfffd;
+            }
+            default: {
+              appendLongStrBuf(c);
               state = NS_HTML5TOKENIZER_COMMENT;
               goto stateloop;
             }
           }
         }
       }
       case NS_HTML5TOKENIZER_COMMENT_START_DASH: {
         if (++pos == endPos) {
@@ -2936,32 +3032,38 @@ nsHtml5Tokenizer::eof()
           systemIdentifier = nsnull;
           forceQuirks = PR_TRUE;
           emitDoctypeToken(0);
           goto eofloop_end;
         }
         goto eofloop_end;
       }
       case NS_HTML5TOKENIZER_COMMENT_START:
-      case NS_HTML5TOKENIZER_COMMENT: {
+      case NS_HTML5TOKENIZER_COMMENT:
+      case NS_HTML5TOKENIZER_COMMENT_END_SPACE: {
 
         emitComment(0, 0);
         goto eofloop_end;
       }
       case NS_HTML5TOKENIZER_COMMENT_END: {
 
         emitComment(2, 0);
         goto eofloop_end;
       }
       case NS_HTML5TOKENIZER_COMMENT_END_DASH:
       case NS_HTML5TOKENIZER_COMMENT_START_DASH: {
 
         emitComment(1, 0);
         goto eofloop_end;
       }
+      case NS_HTML5TOKENIZER_COMMENT_END_BANG: {
+
+        emitComment(3, 0);
+        goto eofloop_end;
+      }
       case NS_HTML5TOKENIZER_DOCTYPE:
       case NS_HTML5TOKENIZER_BEFORE_DOCTYPE_NAME: {
 
         forceQuirks = PR_TRUE;
         emitDoctypeToken(0);
         goto eofloop_end;
       }
       case NS_HTML5TOKENIZER_DOCTYPE_NAME: {
diff --git a/parser/html/nsHtml5Tokenizer.h b/parser/html/nsHtml5Tokenizer.h
--- a/parser/html/nsHtml5Tokenizer.h
+++ b/parser/html/nsHtml5Tokenizer.h
@@ -161,17 +161,17 @@ class nsHtml5Tokenizer
     void strBufToDoctypeName();
     void emitStrBuf();
     void clearLongStrBufForNextState();
     void clearLongStrBuf();
     void clearLongStrBufAndAppendCurrentC(PRUnichar c);
     void clearLongStrBufAndAppendToComment(PRUnichar c);
     void appendLongStrBuf(PRUnichar c);
     void appendSecondHyphenToBogusComment();
-    void adjustDoubleHyphenAndAppendToLongStrBuf(PRUnichar c);
+    void adjustDoubleHyphenAndAppendToLongStrBufAndErr(PRUnichar c);
     void appendLongStrBuf(jArray<PRUnichar,PRInt32> buffer, PRInt32 offset, PRInt32 length);
     void appendLongStrBuf(jArray<PRUnichar,PRInt32> arr);
     void appendStrBufToLongStrBuf();
     nsString* longStrBufToString();
     void emitComment(PRInt32 provisionalHyphens, PRInt32 pos);
   protected:
     void flushChars(PRUnichar* buf, PRInt32 pos);
   private:
@@ -194,23 +194,23 @@ class nsHtml5Tokenizer
       systemIdentifier = nsnull;
       publicIdentifier = nsnull;
       forceQuirks = PR_FALSE;
     }
 
     inline void adjustDoubleHyphenAndAppendToLongStrBufCarriageReturn()
     {
       silentCarriageReturn();
-      adjustDoubleHyphenAndAppendToLongStrBuf('\n');
+      adjustDoubleHyphenAndAppendToLongStrBufAndErr('\n');
     }
 
     inline void adjustDoubleHyphenAndAppendToLongStrBufLineFeed()
     {
       silentLineFeed();
-      adjustDoubleHyphenAndAppendToLongStrBuf('\n');
+      adjustDoubleHyphenAndAppendToLongStrBufAndErr('\n');
     }
 
     inline void appendLongStrBufLineFeed()
     {
       silentLineFeed();
       appendLongStrBuf('\n');
     }
 
@@ -290,68 +290,70 @@ jArray<PRUnichar,PRInt32> nsHtml5Tokeniz
 jArray<PRUnichar,PRInt32> nsHtml5Tokenizer::NOSCRIPT_ARR = 0;
 jArray<PRUnichar,PRInt32> nsHtml5Tokenizer::NOFRAMES_ARR = 0;
 #endif
 
 #define NS_HTML5TOKENIZER_DATA 0
 #define NS_HTML5TOKENIZER_RCDATA 1
 #define NS_HTML5TOKENIZER_CDATA 2
 #define NS_HTML5TOKENIZER_PLAINTEXT 3
-#define NS_HTML5TOKENIZER_TAG_OPEN 49
-#define NS_HTML5TOKENIZER_CLOSE_TAG_OPEN_PCDATA 50
-#define NS_HTML5TOKENIZER_TAG_NAME 58
-#define NS_HTML5TOKENIZER_BEFORE_ATTRIBUTE_NAME 4
-#define NS_HTML5TOKENIZER_ATTRIBUTE_NAME 5
-#define NS_HTML5TOKENIZER_AFTER_ATTRIBUTE_NAME 6
-#define NS_HTML5TOKENIZER_BEFORE_ATTRIBUTE_VALUE 7
-#define NS_HTML5TOKENIZER_ATTRIBUTE_VALUE_DOUBLE_QUOTED 8
-#define NS_HTML5TOKENIZER_ATTRIBUTE_VALUE_SINGLE_QUOTED 9
-#define NS_HTML5TOKENIZER_ATTRIBUTE_VALUE_UNQUOTED 10
-#define NS_HTML5TOKENIZER_AFTER_ATTRIBUTE_VALUE_QUOTED 11
-#define NS_HTML5TOKENIZER_BOGUS_COMMENT 12
-#define NS_HTML5TOKENIZER_MARKUP_DECLARATION_OPEN 13
-#define NS_HTML5TOKENIZER_DOCTYPE 14
-#define NS_HTML5TOKENIZER_BEFORE_DOCTYPE_NAME 15
-#define NS_HTML5TOKENIZER_DOCTYPE_NAME 16
-#define NS_HTML5TOKENIZER_AFTER_DOCTYPE_NAME 17
-#define NS_HTML5TOKENIZER_BEFORE_DOCTYPE_PUBLIC_IDENTIFIER 18
-#define NS_HTML5TOKENIZER_DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED 19
-#define NS_HTML5TOKENIZER_DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED 20
-#define NS_HTML5TOKENIZER_AFTER_DOCTYPE_PUBLIC_IDENTIFIER 21
-#define NS_HTML5TOKENIZER_BEFORE_DOCTYPE_SYSTEM_IDENTIFIER 22
-#define NS_HTML5TOKENIZER_DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED 23
-#define NS_HTML5TOKENIZER_DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED 24
-#define NS_HTML5TOKENIZER_AFTER_DOCTYPE_SYSTEM_IDENTIFIER 25
-#define NS_HTML5TOKENIZER_BOGUS_DOCTYPE 26
-#define NS_HTML5TOKENIZER_COMMENT_START 27
-#define NS_HTML5TOKENIZER_COMMENT_START_DASH 28
-#define NS_HTML5TOKENIZER_COMMENT 29
-#define NS_HTML5TOKENIZER_COMMENT_END_DASH 30
-#define NS_HTML5TOKENIZER_COMMENT_END 31
-#define NS_HTML5TOKENIZER_CLOSE_TAG_OPEN_NOT_PCDATA 32
-#define NS_HTML5TOKENIZER_MARKUP_DECLARATION_HYPHEN 33
-#define NS_HTML5TOKENIZER_MARKUP_DECLARATION_OCTYPE 34
-#define NS_HTML5TOKENIZER_DOCTYPE_UBLIC 35
-#define NS_HTML5TOKENIZER_DOCTYPE_YSTEM 36
-#define NS_HTML5TOKENIZER_CONSUME_CHARACTER_REFERENCE 37
-#define NS_HTML5TOKENIZER_CONSUME_NCR 38
-#define NS_HTML5TOKENIZER_CHARACTER_REFERENCE_LOOP 39
-#define NS_HTML5TOKENIZER_HEX_NCR_LOOP 41
-#define NS_HTML5TOKENIZER_DECIMAL_NRC_LOOP 42
-#define NS_HTML5TOKENIZER_HANDLE_NCR_VALUE 43
-#define NS_HTML5TOKENIZER_SELF_CLOSING_START_TAG 44
-#define NS_HTML5TOKENIZER_CDATA_START 45
-#define NS_HTML5TOKENIZER_CDATA_SECTION 46
-#define NS_HTML5TOKENIZER_CDATA_RSQB 47
-#define NS_HTML5TOKENIZER_CDATA_RSQB_RSQB 48
-#define NS_HTML5TOKENIZER_TAG_OPEN_NON_PCDATA 51
-#define NS_HTML5TOKENIZER_ESCAPE_EXCLAMATION 52
-#define NS_HTML5TOKENIZER_ESCAPE_EXCLAMATION_HYPHEN 53
-#define NS_HTML5TOKENIZER_ESCAPE 54
-#define NS_HTML5TOKENIZER_ESCAPE_HYPHEN 55
-#define NS_HTML5TOKENIZER_ESCAPE_HYPHEN_HYPHEN 56
-#define NS_HTML5TOKENIZER_BOGUS_COMMENT_HYPHEN 57
+#define NS_HTML5TOKENIZER_TAG_OPEN 4
+#define NS_HTML5TOKENIZER_CLOSE_TAG_OPEN_PCDATA 5
+#define NS_HTML5TOKENIZER_TAG_NAME 6
+#define NS_HTML5TOKENIZER_BEFORE_ATTRIBUTE_NAME 7
+#define NS_HTML5TOKENIZER_ATTRIBUTE_NAME 8
+#define NS_HTML5TOKENIZER_AFTER_ATTRIBUTE_NAME 9
+#define NS_HTML5TOKENIZER_BEFORE_ATTRIBUTE_VALUE 10
+#define NS_HTML5TOKENIZER_ATTRIBUTE_VALUE_DOUBLE_QUOTED 11
+#define NS_HTML5TOKENIZER_ATTRIBUTE_VALUE_SINGLE_QUOTED 12
+#define NS_HTML5TOKENIZER_ATTRIBUTE_VALUE_UNQUOTED 13
+#define NS_HTML5TOKENIZER_AFTER_ATTRIBUTE_VALUE_QUOTED 14
+#define NS_HTML5TOKENIZER_BOGUS_COMMENT 15
+#define NS_HTML5TOKENIZER_MARKUP_DECLARATION_OPEN 16
+#define NS_HTML5TOKENIZER_DOCTYPE 17
+#define NS_HTML5TOKENIZER_BEFORE_DOCTYPE_NAME 18
+#define NS_HTML5TOKENIZER_DOCTYPE_NAME 19
+#define NS_HTML5TOKENIZER_AFTER_DOCTYPE_NAME 20
+#define NS_HTML5TOKENIZER_BEFORE_DOCTYPE_PUBLIC_IDENTIFIER 21
+#define NS_HTML5TOKENIZER_DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED 22
+#define NS_HTML5TOKENIZER_DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED 23
+#define NS_HTML5TOKENIZER_AFTER_DOCTYPE_PUBLIC_IDENTIFIER 24
+#define NS_HTML5TOKENIZER_BEFORE_DOCTYPE_SYSTEM_IDENTIFIER 25
+#define NS_HTML5TOKENIZER_DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED 26
+#define NS_HTML5TOKENIZER_DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED 27
+#define NS_HTML5TOKENIZER_AFTER_DOCTYPE_SYSTEM_IDENTIFIER 28
+#define NS_HTML5TOKENIZER_BOGUS_DOCTYPE 29
+#define NS_HTML5TOKENIZER_COMMENT_START 30
+#define NS_HTML5TOKENIZER_COMMENT_START_DASH 31
+#define NS_HTML5TOKENIZER_COMMENT 32
+#define NS_HTML5TOKENIZER_COMMENT_END_DASH 33
+#define NS_HTML5TOKENIZER_COMMENT_END 34
+#define NS_HTML5TOKENIZER_COMMENT_END_SPACE 35
+#define NS_HTML5TOKENIZER_COMMENT_END_BANG 36
+#define NS_HTML5TOKENIZER_CLOSE_TAG_OPEN_NOT_PCDATA 37
+#define NS_HTML5TOKENIZER_MARKUP_DECLARATION_HYPHEN 38
+#define NS_HTML5TOKENIZER_MARKUP_DECLARATION_OCTYPE 39
+#define NS_HTML5TOKENIZER_DOCTYPE_UBLIC 40
+#define NS_HTML5TOKENIZER_DOCTYPE_YSTEM 41
+#define NS_HTML5TOKENIZER_CONSUME_CHARACTER_REFERENCE 42
+#define NS_HTML5TOKENIZER_CONSUME_NCR 43
+#define NS_HTML5TOKENIZER_CHARACTER_REFERENCE_LOOP 44
+#define NS_HTML5TOKENIZER_HEX_NCR_LOOP 45
+#define NS_HTML5TOKENIZER_DECIMAL_NRC_LOOP 46
+#define NS_HTML5TOKENIZER_HANDLE_NCR_VALUE 47
+#define NS_HTML5TOKENIZER_SELF_CLOSING_START_TAG 48
+#define NS_HTML5TOKENIZER_CDATA_START 49
+#define NS_HTML5TOKENIZER_CDATA_SECTION 50
+#define NS_HTML5TOKENIZER_CDATA_RSQB 51
+#define NS_HTML5TOKENIZER_CDATA_RSQB_RSQB 52
+#define NS_HTML5TOKENIZER_TAG_OPEN_NON_PCDATA 53
+#define NS_HTML5TOKENIZER_ESCAPE_EXCLAMATION 54
+#define NS_HTML5TOKENIZER_ESCAPE_EXCLAMATION_HYPHEN 55
+#define NS_HTML5TOKENIZER_ESCAPE 56
+#define NS_HTML5TOKENIZER_ESCAPE_HYPHEN 57
+#define NS_HTML5TOKENIZER_ESCAPE_HYPHEN_HYPHEN 58
+#define NS_HTML5TOKENIZER_BOGUS_COMMENT_HYPHEN 59
 #define NS_HTML5TOKENIZER_LEAD_OFFSET (0xD800 - (0x10000 >> 10))
 #define NS_HTML5TOKENIZER_BUFFER_GROW_BY 1024
 
 
 #endif
 
diff --git a/parser/html/nsHtml5TreeBuilder.cpp b/parser/html/nsHtml5TreeBuilder.cpp
--- a/parser/html/nsHtml5TreeBuilder.cpp
+++ b/parser/html/nsHtml5TreeBuilder.cpp
@@ -1846,25 +1846,25 @@ nsHtml5TreeBuilder::extractCharsetFromCo
           default: {
             continue;
           }
         }
       }
     }
   }
   charsetloop_end: ;
-  nsString* rv = nsnull;
+  nsString* charset = nsnull;
   if (start != -1) {
     if (end == -1) {
       end = buffer.length;
     }
-    rv = nsHtml5Portability::newStringFromBuffer(buffer, start, end - start);
+    charset = nsHtml5Portability::newStringFromBuffer(buffer, start, end - start);
   }
   buffer.release();
-  return rv;
+  return charset;
 }
 
 void 
 nsHtml5TreeBuilder::checkMetaCharset(nsHtml5HtmlAttributes* attributes)
 {
   nsString* content = attributes->getValue(nsHtml5AttributeName::ATTR_CONTENT);
   nsString* internalCharsetLegacy = nsnull;
   if (!!content) {
